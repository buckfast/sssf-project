<!DOCTYPE html>
<html lang="en">
<% include ../views/head %>

<body>
<% include ../views/nav %>

<div class="container content">



  <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
  <link href="/stylesheets/lobby.css" rel="stylesheet">

  <div class="row">
      <div class="col-lg-12">
          <div class="box">
              <div class="lobby">

                <aside class="gamestage">
                  <div class="lobby-head">
                    <h4>aaaaa</h4>
                  </div>
                  <div id="stage">

                    <canvas id="background-canvas" width="900" height="540"></canvas>
                    <canvas id="canvas" width="900" height="540"></canvas>
                    <canvas id="foreground-canvas" width="900" height="540"></canvas>
                    <canvas id="ui-canvas" width="900" height="540"></canvas>

                  </div>

                </aside>
                <aside class="gameplayers">
                  <div class="lobby-head">
                    <h4>aaaaa</h4>

                    <div id="buttons">
                      <button class="btn btn-sm btn-info rounded-0" id="leaveroom">leave room</button>
                    </div>
                  </div>



                  <ul class="players-list">
                      <!-- <li class="list-player">
                          <a href="#">
                              <i class="fa fa-rocket"></i>
                              <span>sasdag</span>
                              <i class="fa  pull-right"></i>
                          </a>
                      </li> -->

                  </ul>


                </aside>
                <aside class="gamechat">
                  <div class="game-chat">

                      <div class="chat-message">
                          <p>feaaaaaaaaaaaaaaaaaaaaaaefffffffffffffffffffffffffffffffffffffffffaeeeeeeeeeeeeaeeeeeeeeeeeffffff</p>
                      </div>
                  </div>
                  <footer>
                  <div class="input-group mb-3 chat-type">
                  <input type="text" class="form-control rounded-0" placeholder="sfee">
                  <div class="input-group-append">
                      <button class=" rounded-0 btn btn-sm btn-info" type="submit">Send</button>
                  </div>
                </div>
              </footer>
                </aside>



              </div>
          </div>
      </div>
  </div>







    <h1 id="t">current room: none</h1>
    <div id="roomlist">
      <h1>room list</h1>
      <ul>
      </ul>
    </div>
    <ul id="messages"></ul>
    <form id="form" action="">
      <input id="name" value="anon"/>
      <input id="input"/>
      <button>Send</button>
    </form>






    <script
			  src="https://code.jquery.com/jquery-3.3.1.min.js"
			  integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
			  crossorigin="anonymous"></script>
    <script src="/javascripts/client.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>



      $(() => {

        let socket = io();

        const url = window.location.pathname;
        socket.emit("room_join", url.substr(url.lastIndexOf('/') + 1));


        document.getElementById("leaveroom").addEventListener("click", (e) => {
          leaveroom();
        })



        $('#form').submit(() => {
          socket.emit('message', $('#name').val()+": "+$('#input').val());

          $('#messages').append($('<li>').text($('#name').val()+": "+$('#input').val()));
          $('#input').val('');
          return false;
        });

        // socket.on("roomList", (list) => {
        //   for (let i=0; i<list.length; i++) {
        //     addRoomToList(socket, {name: Object.keys(list[i])[0], roomNumber: Object.keys(list[i])[0]});
        //   }
        // });

        socket.on('message', (msg) => {
          $('#messages').append($('<li>').text(msg));
        });

        $("#createroom").click(() => {

          socket.emit("room_create", $('#name').val());
        });

        socket.on("room_created", (data) => {
          //addRoomToList(socket, msg);
            $("#buttons").append($("<button>", {
              text: "start game",
              id: "startgame",
              "class": "btn btn-sm btn-primary rounded-0",
              click: () => {
                start();
              }
            }));

            addUserToList(data.username)
            // <li class="list-player">
            //     <a href="#">
            //         <i class="fa fa-rocket"></i>
            //         <span>sasdag</span>
            //         <i class="fa  pull-right"></i>
            //     </a>
            // </li>
        });

        const addUserToList = (username) => {
          $(".players-list").append($('<li class="list-player"><a href="/users/'+username+'"><i class="fa fa-user"></i><span>'+username+'</span><i class="fa pull-right"></i></a></li>'));
        }
        const emptyUsersList = () => {
          $('.players-list').empty();
        }

        socket.on("room_users_update", (msg) => {
          console.log(msg);
          emptyUsersList();
          for (let i=0; i<msg.length; i++) {
            addUserToList(msg[i]);
          }
        });

        socket.on("game_start", (data) => {

          run();
          colorize(data.tiles, data.players, data.borders);
          initPlaceables(data.drawables);
          sendInput(socket);
          canvasui.addEventListener("click", () => {
            clicked(socket);
          });
        })

        socket.on("drawPlaced", (drawables) => {
          drawPlaced(drawables);
        })

        socket.on("updateDrawable", (obj) => { //todo: rename stuff
          if (obj != null) {
            drawPlaced(obj.drawables);
            if (obj.innerTiles != undefined) {
              drawInnerTiles(obj.innerTiles);
            }
          }
        });

        socket.on("roundCountdown", (count) => {
          drawCountdown(count);
        })
        socket.on("clearCountdown", () => {
          clearCountdown();
        })

        socket.on("drawPlaceable", (placeable) => {
          drawPlaceable(placeable);
        })

        socket.on("drawCannonballs", (balls) => {
          drawCannonballs(balls);
        })

        socket.on("tiles", (data) => {
          console.log("players",data.players);
          colorize(data.tiles, data.players, data.borders);
        });

        const start = () => {
          $("#startgame").hide();
          socket.emit("start_game");
        }
        const leaveroom = () => {
          socket.emit("leave_room");
          document.location.href = '/play'
        }
      });



    </script>
</div>
  </body>
</html>
