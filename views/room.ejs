<!DOCTYPE html>
<html lang="en">
<% include ../views/head %>

<body>
<% include ../views/nav %>

<div class="container content">



  <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
  <link href="/stylesheets/lobby.css" rel="stylesheet">

  <div class="row">
      <div class="col-lg-12">
          <div class="box">
              <div class="lobby">

                <aside class="gamestage">
                  <div class="lobby-head">

                  </div>
                  <div id="stage">

                    <canvas id="background-canvas" width="900" height="540"></canvas>
                    <canvas id="canvas" width="900" height="540"></canvas>
                    <canvas id="foreground-canvas" width="900" height="540"></canvas>
                    <canvas id="ui-canvas" width="900" height="540"></canvas>

                  </div>

                </aside>
                <aside class="gameplayers">
                  <div class="lobby-head">
                    <!-- <h4></h4> -->

                    <div id="buttons">
                      <button class="btn btn-sm btn-info rounded-0" id="leaveroom">leave room</button>
                    </div>
                  </div>



                  <ul class="players-list">

                  </ul>


                </aside>
                <aside class="gamechat">
                  <div class="game-chat">


                  </div>
                  <footer>
                  <div class="input-group mb-3 chat-type">
                  <input id="chat-input" type="text" class="form-control rounded-0" placeholder="say hello">
                  <div class="input-group-append">
                      <button id="chat-send" class=" rounded-0 btn btn-sm btn-info" type="button">Send</button>
                  </div>
                </div>
              </footer>
                </aside>



              </div>
          </div>
      </div>
  </div>



    <script
			  src="https://code.jquery.com/jquery-3.3.1.min.js"
			  integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
			  crossorigin="anonymous"></script>
    <script src="/javascripts/client.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>



      $(() => {
       "use strict";
        let socket = io();
        let username = "";
        const url = window.location.pathname;
        socket.emit("room_join", url.substr(url.lastIndexOf('/') + 1));


        document.getElementById("leaveroom").addEventListener("click", (e) => {
          leaveroom();
        })

        socket.on("room_joined", (data) => {
            $(".gamestage").find(".lobby-head").append('<h4>'+data.roomName+'</h4>');
            username = data.username;
        });

        socket.on("room_joined_and_created", (data) => {
          //addRoomToList(socket, msg);
            $("#buttons").append($("<button>", {
              text: "start game",
              id: "startgame",
              "class": "btn btn-sm btn-primary rounded-0",
              click: () => {
                start();
              }
            }));
            username = data.username;


            $(".gamestage").find(".lobby-head").append("<h4>"+data.roomName+"</h4>");

            addUserToList(data.username)

        });

        const addUserToList = (username) => {
          $(".players-list").append($('<li class="list-player"><a href="/users/'+username+'"><i class="fa fa-user"></i><span>'+username+'</span><i class="fa pull-right"></i></a></li>'));
        }
        const emptyUsersList = () => {
          $('.players-list').empty();
        }

        socket.on("room_users_update", (msg) => {
          console.log(msg);
          emptyUsersList();
          for (let i=0; i<msg.length; i++) {
            addUserToList(msg[i]);
          }
        });

        document.addEventListener('keydown', function onEvent(event) {
            if (event.key === "Enter") {
              if ($('#chat-input').val().length > 0) {
                socket.emit("message", $('#chat-input').val());
                addMessage(username+": "+$('#chat-input').val());
              }
            }
        });
        document.getElementById("chat-send").addEventListener("click", (e) => {
          if ($('#chat-input').val().length > 0) {
            socket.emit("message", $('#chat-input').val());
            addMessage(username+": "+$('#chat-input').val());
          }
        })
        socket.on('message', (msg) => {
          addMessage(msg);
        });

        const addMessage = (msg) => {
          const chatbox = document.getElementsByClassName("game-chat")[0];
          const isBottom = chatbox.scrollHeight-chatbox.clientHeight<=chatbox.scrollTop;

          $('.game-chat').append($('<div class="chat-message"><p>'+msg+'</p></div>'));
          $('#chat-input').val('');

          if (isBottom) {
            chatbox.scrollTop = chatbox.scrollHeight-chatbox.clientHeight;
          }
        }

        socket.on("game_start", (data) => {

          run();
          colorize(data.tiles, data.players, data.borders);
          initPlaceables(data.drawables);
          sendInput(socket);
          canvasui.addEventListener("click", () => {
            clicked(socket);
          });
          banner(data.stateText,5000);
        })

        socket.on("drawPlaced", (drawables) => {
          drawPlaced(drawables);
        })

        socket.on("updateDrawable", (obj) => { //todo: rename stuff
          if (obj != null) {
            drawPlaced(obj.drawables);
            if (obj.innerTiles != undefined) {
              drawInnerTiles(obj.innerTiles);
            }
          }
        });

        socket.on("roundCountdown", (count) => {
          drawCountdown(count);
        })
        socket.on("stateChanger", (stateText) => {
          clearCountdown();
          banner(stateText, 5000);
        })

        socket.on("drawPlaceable", (placeable) => {
          drawPlaceable(placeable);
        })

        socket.on("drawCannonballs", (balls) => {
          drawCannonballs(balls);
        })

        socket.on("tiles", (data) => {
          console.log("players",data.players);
          colorize(data.tiles, data.players, data.borders);
        });

        const start = () => {
          $("#startgame").hide();
          socket.emit("start_game");
        }
        const leaveroom = () => {
          socket.emit("leave_room");
          document.location.href = '/play'
        }

        init();
      });



    </script>
</div>
  </body>
</html>
